"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
import json
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.append(str(Path(__file__).parent))

from app.database import init_database, DatabaseManager

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î"""
    
    db_path = "data/companion.db"
    
    print("üóÑÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        init_database(db_path)
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞: {db_path}")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db_manager = DatabaseManager(db_path)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        import sqlite3
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
            tables = cursor.fetchall()
            
            print("üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
            for table in tables:
                print(f"   - {table[0]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            cursor.execute("SELECT id, name FROM character_profile LIMIT 1")
            character = cursor.fetchone()
            
            if character:
                print(f"üë§ –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ–∑–¥–∞–Ω: ID={character[0]}, –ò–º—è={character[1]}")
            else:
                print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ —Å–æ–∑–¥–∞–Ω")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        add_test_data(db_manager)
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î: {e}")
        sys.exit(1)

def add_test_data(db_manager):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É"""
    
    print("\nüìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    conversation_id = db_manager.save_conversation(
        user_message="–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        ai_responses=["–ü—Ä–∏–≤–µ—Ç! üòä", "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ!", "–ê —É —Ç–µ–±—è –∫–∞–∫ –¥–µ–ª–∞?"],
        mood_before="—Å–ø–æ–∫–æ–π–Ω–∞—è",
        mood_after="—Ä–∞–¥–æ—Å—Ç–Ω–∞—è"
    )
    
    if conversation_id > 0:
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω, ID={conversation_id}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è
    memories = [
        {"type": "fact", "content": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª—é–±–∏—Ç –º–∞–Ω–≥—É", "importance": 8},
        {"type": "preference", "content": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –∞–Ω–∏–º–µ-–∞–¥–∞–ø—Ç–∞—Ü–∏–∏", "importance": 6},
        {"type": "event", "content": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ —Å–≤–æ–µ–º –¥–Ω–µ", "importance": 4}
    ]
    
    for memory in memories:
        memory_id = db_manager.save_memory(
            memory_type=memory["type"],
            content=memory["content"],
            importance=memory["importance"],
            source_conversation_id=conversation_id
        )
        
        if memory_id > 0:
            print(f"‚úÖ –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {memory['content']}, ID={memory_id}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    state_updated = db_manager.update_character_state({
        "mood": "—Ä–∞–¥–æ—Å—Ç–Ω–∞—è",
        "energy_level": 85,
        "current_activity": "–æ–±—â–∞–µ—Ç—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    })
    
    if state_updated:
        print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
    
    print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")

if __name__ == "__main__":
    main()

